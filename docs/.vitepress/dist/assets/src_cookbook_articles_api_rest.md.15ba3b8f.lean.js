import{_ as s,v as a,b as n,R as e}from"./chunks/framework.bf5b583c.js";const D=JSON.parse('{"title":"API Rest","description":"","frontmatter":{},"headers":[],"relativePath":"src/cookbook/articles/api_rest.md","filePath":"src/cookbook/articles/api_rest.md","lastUpdated":null}'),l={name:"src/cookbook/articles/api_rest.md"},p=e(`<h1 id="api-rest" tabindex="-1">API Rest <a class="header-anchor" href="#api-rest" aria-label="Permalink to &quot;API Rest&quot;">​</a></h1><p>Pour mettre en œuvre une API REST, écrire le ou les contrôleurs Spring. Annoter chaque classe contrôleur avec l’annotation <code>@RestController</code>.</p><p>« REST est un ensemble de contraintes architecturales. Il ne s&#39;agit ni d&#39;un protocole, ni d&#39;une norme. Les développeurs d&#39;API peuvent mettre en œuvre REST de nombreuses manières. Lorsqu&#39;un client émet une requête par le biais d&#39;une <strong><em>API RESTful</em></strong>, celle-ci transfère une représentation de l&#39;état de la ressource au demandeur ou point de terminaison.</p><p>Cette information, ou représentation, est fournie via le protocole HTTP dans l&#39;un des formats suivants : JSON (JavaScript Object Notation), HTML, XLT, Python, PHP ou texte brut. Le langage de programmation le plus communément utilisé est JSON, car, contrairement à ce que son nom indique, il ne dépend pas d&#39;un langage et peut être lu aussi bien par les humains que par les machines. »</p><p>Source : <a href="https://www.redhat.com/fr/topics/api/what-is-a-rest-api" target="_blank" rel="noreferrer">https://www.redhat.com/fr/topics/api/what-is-a-rest-api</a></p><p>De manière conventionnelle, vers une API REST :</p><ul><li>l’envoi d’une requête HTTP avec la méthode GET demande la récupération d’une ou plusieurs données</li><li>l’envoi d’une requête HTTP avec la méthode POST demande l’ajout d’une donnée</li><li>l’envoi d’une requête HTTP avec la méthode PUT demande la mise à jour complète d’une donnée</li><li>l’envoi d’une requête HTTP avec la méthode PATCH demande la mise à jour partielle d’une donnée</li><li>l’envoi d’une requête HTTP avec la méthode DELETE demande la suppression d’une donnée</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">RestController</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">RequestMapping</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;/api/&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Validated</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">UtilisateurRestController</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">final</span><span style="color:#ADBAC7;"> UtilisateurService</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">utilisateurService;</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">final</span><span style="color:#ADBAC7;"> ThemeService</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">themeService;</span></span>
<span class="line"><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">* Cette méthode renvoie une page d&#39;utilisateurs</span></span>
<span class="line"><span style="color:#768390;">*</span></span>
<span class="line"><span style="color:#768390;">* </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">pageable</span><span style="color:#768390;"> correspond à une demande de page * </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">filtre</span><span style="color:#768390;"> correspond au filtre demandé</span></span>
<span class="line"><span style="color:#768390;">*</span></span>
<span class="line"><span style="color:#768390;">* </span><span style="color:#F47067;">@return</span><span style="color:#768390;"> une page d&#39;utilisateurs</span></span>
<span class="line"><span style="color:#768390;">*/</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">GetMapping</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;utilisateurs&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Page&lt;</span><span style="color:#F47067;">Utilisateur</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#DCBDFB;">getUtilisateursPagines</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#F69D50;">pageable</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">filtre</span><span style="color:#ADBAC7;">){</span></span>
<span class="line"><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> utilisateurService.</span><span style="color:#DCBDFB;">recupererUtilisateurs</span><span style="color:#ADBAC7;">(pageable, filtre);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RestController</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RequestMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/api/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Validated</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UtilisateurRestController</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> UtilisateurService utilisateurService;</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> ThemeService themeService;</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">* Cette méthode renvoie une page d&#39;utilisateurs</span></span>
<span class="line"><span style="color:#6A737D;">*</span></span>
<span class="line"><span style="color:#6A737D;">* </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">pageable</span><span style="color:#6A737D;"> correspond à une demande de page * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">filtre</span><span style="color:#6A737D;"> correspond au filtre demandé</span></span>
<span class="line"><span style="color:#6A737D;">*</span></span>
<span class="line"><span style="color:#6A737D;">* </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> une page d&#39;utilisateurs</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">GetMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;utilisateurs&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Page&lt;</span><span style="color:#D73A49;">Utilisateur</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">getUtilisateursPagines</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#E36209;">pageable</span><span style="color:#24292E;">,</span><span style="color:#E36209;">filtre</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> utilisateurService.</span><span style="color:#6F42C1;">recupererUtilisateurs</span><span style="color:#24292E;">(pageable, filtre);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>NB : l’importation de pageable à choisir est celui de Spring et non celui de AWT qui est un vieux toolkit graphique.</p></div>`,9),o=[p];function t(r,c,i,u,y,d){return a(),n("div",null,o)}const m=s(l,[["render",t]]);export{D as __pageData,m as default};
