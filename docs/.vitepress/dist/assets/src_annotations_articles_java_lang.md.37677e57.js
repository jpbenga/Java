import{_ as a,v as s,b as n,R as e}from"./chunks/framework.bf5b583c.js";const D=JSON.parse('{"title":"java.lang.annotation","description":"","frontmatter":{},"headers":[],"relativePath":"src/annotations/articles/java_lang.md","filePath":"src/annotations/articles/java_lang.md","lastUpdated":null}'),o={name:"src/annotations/articles/java_lang.md"},l=e(`<h1 id="java-lang-annotation" tabindex="-1">java.lang.annotation <a class="header-anchor" href="#java-lang-annotation" aria-label="Permalink to &quot;java.lang.annotation&quot;">​</a></h1><h2 id="documented" tabindex="-1">@Documented <a class="header-anchor" href="#documented" aria-label="Permalink to &quot;@Documented&quot;">​</a></h2><p>Annotation marqueur qui demande à l’outil qui génère la documentation d’inclure cette annotation dans la documentation. Par défaut Javadoc ne génère pas de fichier HTML pour les annotations.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Documented</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> @</span><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">DixHuitAnsOuPlus</span><span style="color:#ADBAC7;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Documented</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> @</span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DixHuitAnsOuPlus</span><span style="color:#24292E;"> {}</span></span></code></pre></div><h2 id="target" tabindex="-1">@Target <a class="header-anchor" href="#target" aria-label="Permalink to &quot;@Target&quot;">​</a></h2><p>Annotation qui indique sur quel élément Java l’annotation peut-être placée. Cette annotation utilise l’énumération <code>ElementType</code> : <a href="https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/annotation/" target="_blank" rel="noreferrer">https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/annotation/</a> ElementType.html Dans l’exemple ci-dessous, l’annotation pourra être placée au dessus d’un attribut et au dessus d’une méthode :</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Documented</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Target</span><span style="color:#ADBAC7;">({ElementType.FIELD, ElementType.METHOD})</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> @</span><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">DixHuitAnsOuPlus</span><span style="color:#ADBAC7;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Documented</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Target</span><span style="color:#24292E;">({ElementType.FIELD, ElementType.METHOD})</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> @</span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DixHuitAnsOuPlus</span><span style="color:#24292E;"> {}</span></span></code></pre></div><h2 id="retention" tabindex="-1">@Retention <a class="header-anchor" href="#retention" aria-label="Permalink to &quot;@Retention&quot;">​</a></h2><p>Précise la politique de rétention de l’annotation. Il y a trois valeurs possibles : <code>SOURCE</code> (l’annotation n’existera qu’au niveau du code source et sera ignorée par le compilateur), <code>CLASS</code> (l’annotation sera retenue jusqu’au moment de la compilation mais ignorée par la JVM) et <code>RUNTIME</code> (l’annotation sera retenue jusqu’à l’exécution du programme).</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Documented</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Target</span><span style="color:#ADBAC7;">({ElementType.FIELD, ElementType.METHOD})</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Retention</span><span style="color:#ADBAC7;">(RetentionPolicy.RUNTIME)</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> @</span><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">DixHuitAnsOuPlus</span><span style="color:#ADBAC7;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Documented</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Target</span><span style="color:#24292E;">({ElementType.FIELD, ElementType.METHOD})</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Retention</span><span style="color:#24292E;">(RetentionPolicy.RUNTIME)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> @</span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DixHuitAnsOuPlus</span><span style="color:#24292E;"> {}</span></span></code></pre></div><h2 id="repeatable" tabindex="-1">@Repeatable <a class="header-anchor" href="#repeatable" aria-label="Permalink to &quot;@Repeatable&quot;">​</a></h2><p>Apparue avec la version 8 de Java, elle autorise une annotation a être utilisée plusieurs fois sur un même élément Java. L’annotation <code>@Scheduled</code> utilisée ci-après est annotée <code>@Repeatable</code> :</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Scheduled</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">cron</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;00 00 8 * * *&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Scheduled</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">cron</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;00 00 19 * * *&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">sauvegarder</span><span style="color:#ADBAC7;">() {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Scheduled</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">cron</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;00 00 8 * * *&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Scheduled</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">cron</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;00 00 19 * * *&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sauvegarder</span><span style="color:#24292E;">() {}</span></span></code></pre></div>`,13),p=[l];function t(c,r,i,d,u,y){return s(),n("div",null,p)}const h=a(o,[["render",t]]);export{D as __pageData,h as default};
