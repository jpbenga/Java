import{_ as s,v as n,b as a,R as l}from"./chunks/framework.bf5b583c.js";const C=JSON.parse('{"title":"Controlleur","description":"","frontmatter":{},"headers":[],"relativePath":"src/cookbook/articles/controlleur.md","filePath":"src/cookbook/articles/controlleur.md","lastUpdated":null}'),e={name:"src/cookbook/articles/controlleur.md"},p=l(`<h1 id="controlleur" tabindex="-1">Controlleur <a class="header-anchor" href="#controlleur" aria-label="Permalink to &quot;Controlleur&quot;">​</a></h1><ul><li><p>Écrire le ou les contrôleurs Spring. Annoter chaque classe contrôleur avec <code>@Controller</code>.</p></li><li><p>(manière dépréciée) Demander à Spring l’injection des objets de type Service dans les contrôleurs grâce à l&#39;annotation <code>@Autowired</code> placée sur chaque attribut.</p></li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>NB : Chaque objet de type Service doit être annoté @Autowired.</p></div><p>Exemple:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Controller</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">EnqueteController</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Autowired</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> EnqueteService</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">enqueteService;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Autowired</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> QuestionService</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">questionService;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Controller</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EnqueteController</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> EnqueteService enqueteService;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> QuestionService questionService;</span></span></code></pre></div><p>(manière moderne, à préférer) Ajouter un constructeur dans le contrôleur avec en paramètre tous les objets que Spring doit injecter dans le contrôleur.</p><p>Exemple:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Controller</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">EnqueteController</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">final</span><span style="color:#ADBAC7;"> EnqueteService</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">enqueteService;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">final</span><span style="color:#ADBAC7;"> QuestionService</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">questionService;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">EnqueteController</span><span style="color:#ADBAC7;">(EnqueteService </span><span style="color:#F69D50;">enqueteService</span><span style="color:#ADBAC7;">, QuestionService </span><span style="color:#F69D50;">questionService</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">super</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.enqueteService </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> enqueteService;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.questionService </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> questionService;</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Controller</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EnqueteController</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> EnqueteService enqueteService;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> QuestionService questionService;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EnqueteController</span><span style="color:#24292E;">(EnqueteService </span><span style="color:#E36209;">enqueteService</span><span style="color:#24292E;">, QuestionService </span><span style="color:#E36209;">questionService</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.enqueteService </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> enqueteService;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.questionService </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> questionService;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>(manière encore plus moderne, à préférer) Ajouter l’annotation <code>@AllArgsConstructor</code> de Lombok qui va ajouter à la volée un constructeur avec en paramètre tous les objets que Spring doit injecter dans le contrôleur.</p><p>Exemple:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Controller</span></span>
<span class="line has-focus"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">AllArgsConstructor</span><span style="color:#ADBAC7;"> </span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">EnqueteController</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">final</span><span style="color:#ADBAC7;"> EnqueteService</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">enqueteService;</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">final</span><span style="color:#ADBAC7;"> QuestionService</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">questionService;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Controller</span></span>
<span class="line has-focus"><span style="color:#24292E;">@</span><span style="color:#D73A49;">AllArgsConstructor</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EnqueteController</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> EnqueteService enqueteService;</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> QuestionService questionService;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>Ajouter les méthodes nécessaires pour traiter toutes les requêtes HTTP. Chacune de ces méthodes doit renvoyer un objet de type ModelAndView : <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/" target="_blank" rel="noreferrer">https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/</a> web/servlet/ModelAndView.html</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Controller</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">EnqueteController</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">final</span><span style="color:#ADBAC7;"> EnqueteService</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">enqueteService;</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">final</span><span style="color:#ADBAC7;"> QuestionService</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">questionService;</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">RequestMapping</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">value</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> { </span><span style="color:#96D0FF;">&quot;/index&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;/&quot;</span><span style="color:#ADBAC7;"> }) </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> ModelAndView </span><span style="color:#DCBDFB;">accueil</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">ModelAndView</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">mav</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">ModelAndView</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;index&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">                  mav.</span><span style="color:#DCBDFB;">addObject</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;enquetes&quot;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">enqueteService.</span><span style="color:#DCBDFB;">recupererEnquetes</span><span style="color:#ADBAC7;">());</span></span>
<span class="line"><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> mav; }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Controller</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EnqueteController</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> EnqueteService enqueteService;</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> QuestionService questionService;</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RequestMapping</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#032F62;">&quot;/index&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> ModelAndView </span><span style="color:#6F42C1;">accueil</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">ModelAndView mav </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ModelAndView</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;index&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                  mav.</span><span style="color:#6F42C1;">addObject</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;enquetes&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">enqueteService.</span><span style="color:#6F42C1;">recupererEnquetes</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> mav; }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,13),o=[p];function t(r,c,i,y,A,u){return n(),a("div",null,o)}const d=s(e,[["render",t]]);export{C as __pageData,d as default};
