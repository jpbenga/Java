import{_ as s,v as a,b as n,R as o}from"./chunks/framework.bf5b583c.js";const D=JSON.parse('{"title":"Swagger","description":"","frontmatter":{},"headers":[],"relativePath":"src/annotations/articles/swagger.md","filePath":"src/annotations/articles/swagger.md","lastUpdated":null}'),p={name:"src/annotations/articles/swagger.md"},e=o(`<h1 id="swagger" tabindex="-1">Swagger <a class="header-anchor" href="#swagger" aria-label="Permalink to &quot;Swagger&quot;">​</a></h1><h2 id="operation" tabindex="-1">@Operation <a class="header-anchor" href="#operation" aria-label="Permalink to &quot;@Operation&quot;">​</a></h2><p>Annotation servant à définir ce qui sera exposé sur la page Swagger concernant la méthode d’un contrôleur REST</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Operation</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">description</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;Renvoie l’ensemble des thèmes&quot;</span><span style="color:#ADBAC7;">) @</span><span style="color:#F47067;">GetMapping</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;themes&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> List</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">Theme</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">getThemes</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> themeService.</span><span style="color:#DCBDFB;">recupererThemes</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Operation</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">description</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Renvoie l’ensemble des thèmes&quot;</span><span style="color:#24292E;">) @</span><span style="color:#D73A49;">GetMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;themes&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> List</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Theme</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getThemes</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> themeService.</span><span style="color:#6F42C1;">recupererThemes</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="parameter" tabindex="-1">@Parameter <a class="header-anchor" href="#parameter" aria-label="Permalink to &quot;@Parameter&quot;">​</a></h2><p>Annotation servant à décrire chaque méthode d’un REST Contrôleur</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Operation</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">description</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;Ajoute un thème&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">ResponseStatus</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">code</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">HttpStatus.CREATED) @</span><span style="color:#F47067;">PostMapping</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;themes/{nom}&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Theme </span><span style="color:#DCBDFB;">postTheme</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Parameter</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">description</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;Nom du thème à ajouter&quot;</span><span style="color:#ADBAC7;">) String nom) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> themeService.</span><span style="color:#DCBDFB;">ajouterTheme</span><span style="color:#ADBAC7;">(nom);</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Operation</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">description</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Ajoute un thème&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ResponseStatus</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">code</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">HttpStatus.CREATED) @</span><span style="color:#D73A49;">PostMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;themes/{nom}&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Theme </span><span style="color:#6F42C1;">postTheme</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Parameter</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">description</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Nom du thème à ajouter&quot;</span><span style="color:#24292E;">) String nom) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> themeService.</span><span style="color:#6F42C1;">ajouterTheme</span><span style="color:#24292E;">(nom);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,7),l=[e];function t(r,c,y,i,A,u){return a(),n("div",null,l)}const h=s(p,[["render",t]]);export{D as __pageData,h as default};
