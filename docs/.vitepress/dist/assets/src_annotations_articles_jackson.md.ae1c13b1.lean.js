import{_ as s,v as a,b as n,R as e}from"./chunks/framework.bf5b583c.js";const v=JSON.parse('{"title":"Jackson","description":"","frontmatter":{},"headers":[],"relativePath":"src/annotations/articles/jackson.md","filePath":"src/annotations/articles/jackson.md","lastUpdated":null}'),o={name:"src/annotations/articles/jackson.md"},l=e(`<h1 id="jackson" tabindex="-1">Jackson <a class="header-anchor" href="#jackson" aria-label="Permalink to &quot;Jackson&quot;">​</a></h1><h2 id="jsonproperty" tabindex="-1">@JsonProperty <a class="header-anchor" href="#jsonproperty" aria-label="Permalink to &quot;@JsonProperty&quot;">​</a></h2><p>Annotation servant, entre autres, à indiquer le nom de l’attribut tel qui doit apparaître dans la version sérialisée en JSON de l’objet Java</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">JsonProperty</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">value</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;prix&quot;</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">float</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">prixTTC;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">JsonProperty</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;prix&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> prixTTC;</span></span></code></pre></div><p>L’ordre de sérialisation est imposé avec l’attribut <code>index</code> : value=””, index=2</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">JsonProperty</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">value</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;prix&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">index</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">float</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">prixTTC;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">JsonProperty</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;prix&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">index</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> prixTTC;</span></span></code></pre></div><p>Pour accepter une donnée sans la restituer au moment de la sérialisation :</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">JsonProperty</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">access</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">Access.WRITE_ONLY)</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">motDePasse;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">JsonProperty</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">access</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">Access.WRITE_ONLY)</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String motDePasse;</span></span></code></pre></div><h2 id="jsonignore" tabindex="-1">@JsonIgnore <a class="header-anchor" href="#jsonignore" aria-label="Permalink to &quot;@JsonIgnore&quot;">​</a></h2><p>Annotation servant à ne pas inclure l’attribut annoté dans l’expression JSON de l’objet Java, autrement dit dans la version sérialisée de l’objet Java</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">JsonIgnore</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">float</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">prixTTC;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">JsonIgnore</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> prixTTC;</span></span></code></pre></div><h2 id="jsonmanagedreference" tabindex="-1">@JsonManagedReference <a class="header-anchor" href="#jsonmanagedreference" aria-label="Permalink to &quot;@JsonManagedReference&quot;">​</a></h2><p>Accompagne l’annotation <code>@OneToMany</code> et permet d’éviter les boucles infinies au moment de la sérialisation</p><h2 id="jsonbackreference" tabindex="-1">@JsonBackReference <a class="header-anchor" href="#jsonbackreference" aria-label="Permalink to &quot;@JsonBackReference&quot;">​</a></h2><p>Accompagne l’annotation <code>@ManyToOne</code> et permet d’éviter les boucles infinies au moment de la sérialisation</p>`,15),p=[l];function t(r,c,i,d,y,u){return a(),n("div",null,p)}const A=s(o,[["render",t]]);export{v as __pageData,A as default};
